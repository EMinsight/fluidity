<?xml version="1.0" encoding="utf-8" ?>
<fluidity_options>
    <simulation_name>
        <string_value lines="1">Sphere</string_value>
    </simulation_name>
    <problem_type>
        <string_value lines="1">stokes</string_value>
    </problem_type>
    <geometry>
        <dimension>
            <integer_value rank="0">3</integer_value>
        </dimension>
        <mesh name="CoordinateMesh">
            <from_file file_name="test_CoordinateMesh">
                <format name="gmsh"></format>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
            </from_file>
        </mesh>
        <mesh name="VelocityMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <mesh_shape>
                    <polynomial_degree>
                        <integer_value rank="0">2</integer_value>
                    </polynomial_degree>
                </mesh_shape>
                <mesh_continuity>
                    <string_value>continuous</string_value>
                </mesh_continuity>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <mesh name="MaterialMesh">
            <from_mesh>
                <mesh name="CoordinateMesh"></mesh>
                <stat>
                    <exclude_from_stat></exclude_from_stat>
                </stat>
            </from_mesh>
        </mesh>
        <quadrature>
            <degree>
                <integer_value rank="0">5</integer_value>
            </degree>
        </quadrature>
    </geometry>
    <io>
        <dump_format>
            <string_value>vtk</string_value>
        </dump_format>
        <dump_period>
            <constant>
                <real_value rank="0">0.08</real_value>
            </constant>
        </dump_period>
        <output_mesh name="CoordinateMesh"></output_mesh>
        <stat></stat>
    </io>
    <particles>
        <particle_group name="Model">
            <particle_io>
                <dump_period>
                    <constant>
                        <real_value rank="0">0.08</real_value>
                    </constant>
                </dump_period>
            </particle_io>
            <particle_spawning>
                <mesh name="CoordinateMesh"></mesh>
                <min_cv_threshhold>
                    <integer_value rank="0">20</integer_value>
                </min_cv_threshhold>
                <max_cv_threshhold>
                    <integer_value rank="0">80</integer_value>
                </max_cv_threshhold>
                <spawn_location>
                    <radius>
                        <real_value rank="0">0.3</real_value>
                    </radius>
                </spawn_location>
                <spawn_attributes>
                    <copy_parent_attributes></copy_parent_attributes>
                </spawn_attributes>
                <subgroup_spawning_caps>
                    <percentage>
                        <real_value rank="0">99.9</real_value>
                    </percentage>
                </subgroup_spawning_caps>
            </particle_spawning>
            <particle_subgroup name="Circle">
                <initial_position>
                    <python>
                        <string_value type="code" language="python" lines="20">def val(t):&#x0A;  from numpy import arange,zeros,reshape,concatenate, cos, pi,sqrt&#x0A;&#x0A;  a=50&#x0A;  b=50&#x0A;  d=50&#x0A;  c=1786&#x0A;  x=zeros(c,float)&#x0A;  y=zeros(c,float)&#x0A;  z=zeros(c,float)&#x0A;  k=0&#x0A;  for i in range(0,b):&#x0A;    for j in range(0,a):&#x0A;      for l in range(0,d):&#x0A;        if (sqrt(((1.0*i/b)-0.5)**2 + ((1.0*j/a)-0.75)**2 + ((1.0*l/d)-0.6)**2)&lt;=0.15):&#x0A;          x[k] = 1.0*i/b&#x0A;          y[k] = 1.0*j/b&#x0A;          z[k] = 1.0*l/b&#x0A;          k = k + 1&#x0A;        &#x0A;  return reshape(concatenate((x,y,z)),(3,c)).T</string_value>
                    </python>
                </initial_position>
                <attributes>
                    <scalar_attribute name="Inside">
                        <constant>
                            <real_value rank="0">1</real_value>
                        </constant>
                    </scalar_attribute>
                </attributes>
            </particle_subgroup>
            <particle_subgroup name="Fill">
                <initial_position>
                    <python>
                        <string_value type="code" language="python" lines="20">def val(t):&#x0A;  from numpy import arange,zeros,reshape,concatenate, cos, pi,sqrt&#x0A;&#x0A;  a=50&#x0A;  b=50&#x0A;  d=50&#x0A;  c=123214&#x0A;  x=zeros(c,float)&#x0A;  y=zeros(c,float)&#x0A;  z=zeros(c,float)&#x0A;  k=0&#x0A;  for i in range(0,b):&#x0A;    for j in range(0,a):&#x0A;      for l in range(0,d):&#x0A;        if (sqrt(((1.0*i/b)-0.5)**2 + ((1.0*j/a)-0.75)**2 + ((1.0*l/d)-0.6)**2)&gt;0.15):&#x0A;          x[k] = 1.0*i/b&#x0A;          y[k] = 1.0*j/b&#x0A;          z[k] = 1.0*l/b&#x0A;          k = k + 1&#x0A;        &#x0A;  return reshape(concatenate((x,y,z)),(3,c)).T</string_value>
                    </python>
                </initial_position>
                <attributes>
                    <scalar_attribute name="Inside">
                        <constant>
                            <real_value rank="0">0</real_value>
                        </constant>
                    </scalar_attribute>
                </attributes>
            </particle_subgroup>
        </particle_group>
        <moving_outside_domain>
            <delete></delete>
        </moving_outside_domain>
        <lagrangian_timestepping>
            <subcycles>
                <integer_value rank="0">1</integer_value>
            </subcycles>
            <search_tolerance>
                <real_value rank="0">1e-10</real_value>
            </search_tolerance>
            <rk4_guided_search></rk4_guided_search>
        </lagrangian_timestepping>
    </particles>
    <timestepping>
        <current_time>
            <real_value rank="0">0</real_value>
        </current_time>
        <timestep>
            <real_value rank="0">0.001</real_value>
        </timestep>
        <finish_time>
            <real_value rank="0">8</real_value>
        </finish_time>
        <adaptive_timestep>
            <requested_cfl>
                <real_value rank="0">1.5</real_value>
            </requested_cfl>
            <courant_number name="ControlVolumeCFLNumber">
                <mesh name="MaterialMesh"></mesh>
            </courant_number>
            <increase_tolerance>
                <real_value rank="0">1.1</real_value>
            </increase_tolerance>
        </adaptive_timestep>
    </timestepping>
    <material_phase name="Normal">
        <vector_field name="Velocity" rank="1">
            <prescribed>
                <mesh name="VelocityMesh"></mesh>
                <value name="WholeMesh">
                    <python>
                        <string_value type="code" language="python" lines="20">def val(X,t):&#x0A;  import numpy as np&#x0A;  u1 = -2*np.sin(np.pi*X[0])**2*np.sin(np.pi*X[1])*np.cos(np.pi*X[1])*np.cos(np.pi*t/8.0)&#x0A;  u2 = 2*np.sin(np.pi*X[1])**2*np.sin(np.pi*X[0])*np.cos(np.pi*X[0])*np.cos(np.pi*t/8.0)&#x0A;  u3 = 0&#x0A;  return (u1,u2,u3)</string_value>
                    </python>
                </value>
                <output></output>
                <stat>
                    <include_in_stat></include_in_stat>
                </stat>
                <detectors>
                    <exclude_from_detectors></exclude_from_detectors>
                </detectors>
                <particles>
                    <exclude_from_particles></exclude_from_particles>
                </particles>
            </prescribed>
        </vector_field>
        <scalar_field name="MaterialVolumeFraction" rank="0">
            <diagnostic>
                <algorithm name="from_particles" material_phase_support="multiple">
                    <particle_group name="Model">
                        <particle_attribute name="Inside"></particle_attribute>
                    </particle_group>
                    <interpolation>
                        <weighted_distance></weighted_distance>
                    </interpolation>
                </algorithm>
                <mesh name="MaterialMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <particles>
                    <exclude_from_particles></exclude_from_particles>
                </particles>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
                <adaptivity_options>
                    <absolute_measure>
                        <scalar_field name="InterpolationErrorBound" rank="0">
                            <prescribed>
                                <value name="WholeMesh">
                                    <constant>
                                        <real_value rank="0">0.1</real_value>
                                    </constant>
                                </value>
                                <output></output>
                                <stat></stat>
                                <detectors>
                                    <exclude_from_detectors></exclude_from_detectors>
                                </detectors>
                                <particles>
                                    <exclude_from_particles></exclude_from_particles>
                                </particles>
                            </prescribed>
                        </scalar_field>
                    </absolute_measure>
                </adaptivity_options>
            </diagnostic>
        </scalar_field>
    </material_phase>
    <material_phase name="Fill">
        <vector_field name="Velocity" rank="1">
            <aliased material_phase_name="Normal" field_name="Velocity"></aliased>
        </vector_field>
        <scalar_field name="MaterialVolumeFraction" rank="0">
            <diagnostic>
                <algorithm name="Internal" material_phase_support="multiple"></algorithm>
                <mesh name="MaterialMesh"></mesh>
                <output></output>
                <stat></stat>
                <convergence>
                    <include_in_convergence></include_in_convergence>
                </convergence>
                <detectors>
                    <include_in_detectors></include_in_detectors>
                </detectors>
                <particles>
                    <exclude_from_particles></exclude_from_particles>
                </particles>
                <steady_state>
                    <include_in_steady_state></include_in_steady_state>
                </steady_state>
            </diagnostic>
        </scalar_field>
    </material_phase>
    <flredecomp>
        <final_partitioner>
            <scotch></scotch>
        </final_partitioner>
    </flredecomp>
</fluidity_options>
